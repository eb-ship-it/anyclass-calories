// ====== –ù–ê–°–¢–†–û–ô–ö–ê ======
const WEBHOOK_URL = 'https://n8n-test.anysports.tv/webhook/analyze'; // —Ç–≤–æ–π Production URL

// ====== DOM ======
const fileInput = document.getElementById('file');
const preview   = document.getElementById('preview');
const btn       = document.getElementById('analyzeBtn');
const loading   = document.getElementById('loading');
const result    = document.getElementById('result');
const errorBox  = document.getElementById('error');

let selectedFile = null;

// –º–∞–ª–µ–Ω—å–∫–∏–µ —É—Ç–∏–ª–∏—Ç—ã
function showLoading(on) { loading.style.display = on ? 'block' : 'none'; }
function setError(msg)   { errorBox.textContent = msg || ''; }
function setResult(html) { result.innerHTML = html || ''; }

// ====== –ü—Ä–µ–≤—å—é –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ======
fileInput.addEventListener('change', () => {
  setResult('');
  setError('');
  const file = fileInput.files?.[0];
  if (!file) {
    selectedFile = null;
    preview.innerHTML = '';
    return;
  }
  selectedFile = file;
  const url = URL.createObjectURL(file);
  preview.innerHTML = `<img src="${url}" alt="preview" />`;
});

// ====== –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å" ======
btn.addEventListener('click', async () => {
  setError('');
  setResult('');

  if (!selectedFile) {
    setError('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ñ–æ—Ç–æ.');
    return;
  }

  // –≥–æ—Ç–æ–≤–∏–º —Ñ–æ—Ä–º—É
  const fd = new FormData();
  fd.append('image', selectedFile);

  // —Ç–∞–π–º–∞—É—Ç (–Ω–∞ —Å–ª—É—á–∞–π –∑–∞–≤–∏—Å–∞–Ω–∏–π —Å–µ—Ç–∏)
  const controller = new AbortController();
  const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 —Å–µ–∫

  btn.disabled = true;
  showLoading(true);

  try {
    const res = await fetch(WEBHOOK_URL, {
      method: 'POST',
      body: fd,
      signal: controller.signal,
    });

    // –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É ‚Äî –ø–æ–∫–∞–∂–µ–º –∫–æ–¥ –∏ —Ç–µ–∫—Å—Ç
    if (!res.ok) {
      const txt = await res.text().catch(() => '');
      throw new Error(`HTTP ${res.status} ‚Äî ${txt || '–æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}`);
    }

    // –ø—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
    let data = null;
    try {
      data = await res.json();
    } catch {
      const txt = await res.text().catch(() => '');
      throw new Error(`–û—Ç–≤–µ—Ç –Ω–µ JSON ‚Äî ${txt.slice(0, 300)}`);
    }

    // –æ–∂–∏–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç { items: [...], totals: {...} }
    const items = Array.isArray(data.items) ? data.items : [];
    const totals = data.totals || {};

    const lines = items.map(it =>
      `‚Ä¢ ${it.name} (~ ${Math.round(it.mass_g || 0)} –≥) ¬∑ ${Math.round(it.kcal || 0)} –∫–∫–∞–ª`
    ).join('<br/>');

    setResult(`
      <h3>‚úÖ –ì–æ—Ç–æ–≤–æ!</h3>
      <div class="list">${lines || '–ù–∏—á–µ–≥–æ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ'}</div>
      <div style="margin-top:8px;">
        <div><strong>–ò—Ç–æ–≥–æ:</strong> ${Math.round(totals.kcal || 0)} –∫–∫–∞–ª</div>
        <div>ü•© –ë–µ–ª–∫–∏: ${Number(totals.protein_g || 0)} –≥</div>
        <div>ü•ë –ñ–∏—Ä—ã: ${Number(totals.fat_g || 0)} –≥</div>
        <div>üçû –£–≥–ª–µ–≤–æ–¥—ã: ${Number(totals.carb_g || 0)} –≥</div>
      </div>
      <div class="row">
        <button class="btn" onclick="location.reload()">–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë —Ñ–æ—Ç–æ</button>
      </div>
    `);
  } catch (e) {
    // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    setError(`–û—à–∏–±–∫–∞: ${e.message}`);
    console.error('[analyze error]', e);
  } finally {
    clearTimeout(timeoutId);
    btn.disabled = false;
    showLoading(false);
  }
});
